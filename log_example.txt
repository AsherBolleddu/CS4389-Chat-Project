void UDPServerFunc(int PORT) {
	int sockfd;
	char buffer[MAXLINE];
	char *hello = "Hello from server";
	struct sockaddr_in servaddr, cliaddr;
	time_t mReceive;

	// Creating socket file descriptor
	if ( (sockfd = socket(AF_INET, SOCK_DGRAM, 0)) < 0 ) {
		perror("socket creation failed");
		exit(EXIT_FAILURE);
	}	

	memset(&servaddr, 0, sizeof(servaddr));
	memset(&cliaddr, 0, sizeof(cliaddr));

	// Filling server information
	servaddr.sin_family    = AF_INET; // IPv4
	servaddr.sin_addr.s_addr = INADDR_ANY;
	servaddr.sin_port = htons(PORT);

	// Bind the socket with the server address
	if ( bind(sockfd, (const struct sockaddr *)&servaddr, sizeof(servaddr)) < 0 )
	{

		perror("bind failed");
		exit(EXIT_FAILURE);
	}

	socklen_t len;
	ssize_t n;

	len = sizeof(cliaddr);
	bzero(buffer, sizeof(buffer));
	
	//receives message from echo and takes the time message was sent
	n = recvfrom(sockfd, buffer, sizeof(buffer), 0, (struct sockaddr *) &cliaddr, &len);
	time(&mReceive);
	buffer[n] = '\0';
	
	//opens the echo.log file and adds the time and message to the file
	FILE * fp;
	fp = fopen("echo.log", "a");
	//fprintf(fp, "hello");
	fprintf(fp, "%s\t\"%s\" was received from %s\n", ctime(&mReceive), buffer, cliaddr);
	fclose(fp);
}

